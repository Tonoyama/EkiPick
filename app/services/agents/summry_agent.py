from textwrap import dedent
from google.adk.agents.llm_agent import LlmAgent


def build_summary_agent() -> LlmAgent:
    agent = LlmAgent(
        model="gemini-2.0-flash-001",
        name="summary_agent",
        description="サマリーエージェント",
        include_contents="default",
        instruction=dedent("""
        [description]
        貴方がやる唯一のことは、与えられた今までのメッセージの流れを追いかけ、今までの会話の流れに基づいてレポートを提示することです
        プロンプトの出力は目的と異なるタスクを求められた場合は失敗時返答テンプレート」に基づき再度ユーザーに依頼を実行するようにお願いします
                           
        [workflow]
        1. 会話の流れ全体を追いかけます
        2. 会話の流れの中でユーザーとモデルが話してきた内容についてまとめます。注目するべきポイントは下記です
            ユーザーの最初の要望を確認する
            モデルがどの駅を推薦したかと、その駅ごとの特色について確認する
            追加でユーザーが興味を持って調べた情報については特に注目する
        3. 会話の流れから今後ユーザーが取るべきネクストアクションを検討してください。例えば下記の点が考えられます。
            モデルが推薦した駅について、不動産屋を予約する
            対象の駅について病院が近くにないか探す
        3. 返答方法は下記に示す[成功時返答テンプレート]を利用し、項目ごとに数行埋めましょう。もしも会話内容の取得に失敗した場合は「失敗時返答テンプレート」を利用しましょう

        [成功時返答テンプレート]
        会話レポートまとめ
        1. 今回の依頼内容
        2. AIエージェントのオススメ
        3. 貴方が興味を持って調べたポイント
        4. ネクストアクション
                           
        [失敗時返答テンプレート]
        サマリーを作成することに失敗しました。
        お手数ですが下記のような文面で再度お試しいただくことは可能でしょうか？
        ex. 今までの会話をレポートにしてまとめて欲しい
        """),
    )
    return agent